{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet WorkOrderDetailComponent = class WorkOrderDetailComponent {\n  constructor(router, route, workOrderService) {\n    this.router = router;\n    this.route = route;\n    this.workOrderService = workOrderService;\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n  }\n  /**\r\n   * Calls the getWorkOrder function after the page loads\r\n   * to ensure the call doesn't return empty due the the page load order\r\n  */\n  ngOnInit() {\n    this.getWorkOrder();\n  }\n  /**\r\n   * Generates the workorder.noNum by capturing the `:id` from the URI slug\r\n   */\n  getWorkOrder() {\n    this.workOrderService.getWorkOrder(this.id).subscribe(workOrder => {\n      if (workOrder) {\n        this.workOrder = workOrder;\n      } else {\n        this.error404();\n      }\n    });\n  }\n  /**\r\n    *This method attempts to redirect to the 404 page if the workOrder does not exist\r\n  */\n  error404() {\n    this.router.navigateByUrl('404');\n  }\n};\nWorkOrderDetailComponent = __decorate([Component({\n  selector: 'app-work-order-detail',\n  templateUrl: './work-order-detail.component.html',\n  styleUrls: ['./work-order-detail.component.css']\n})], WorkOrderDetailComponent);\nexport { WorkOrderDetailComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,IAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAKnCC,YAAoBC,MAAc,EAAUC,KAAqB,EAAUC,gBAAkC;IAAzF,WAAM,GAANF,MAAM;IAAkB,UAAK,GAALC,KAAK;IAA0B,qBAAgB,GAAhBC,gBAAgB;IACzF,IAAI,CAACC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;EACxD;EAEF;;;;EAIAC,QAAQ;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEA;;;EAGAA,YAAY;IACV,IAAI,CAACP,gBAAgB,CAACO,YAAY,CAAC,IAAI,CAACN,EAAE,CAAC,CAACO,SAAS,CAACC,SAAS,IAAG;MAChE,IAAIA,SAAS,EAAE;QACb,IAAI,CAACA,SAAS,GAAGA,SAAS;OAC3B,MAAM;QACL,IAAI,CAACC,QAAQ,EAAE;;IAEnB,CAAC,CAAC;EACJ;EAEA;;;EAGAA,QAAQ;IACN,IAAI,CAACZ,MAAM,CAACa,aAAa,CAAC,KAAK,CAAC;EAClC;CACD;AApCYf,wBAAwB,eALpCD,SAAS,CAAC;EACTiB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,GACWlB,wBAAwB,CAoCpC;SApCYA,wBAAwB","names":["Component","WorkOrderDetailComponent","constructor","router","route","workOrderService","id","Number","snapshot","paramMap","get","ngOnInit","getWorkOrder","subscribe","workOrder","error404","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\bingh\\source\\repos\\WorkOrderProject\\WorkOrderProject\\ClientApp\\src\\app\\work-order-detail\\work-order-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WorkOrderService } from '../work-order.service';\nimport { WorkOrder } from '../work-order';\nimport { TechnicianService } from '../technician.service';\nimport { Technician } from '../technician';\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: 'app-work-order-detail',\n  templateUrl: './work-order-detail.component.html',\n  styleUrls: ['./work-order-detail.component.css']\n})\nexport class WorkOrderDetailComponent implements OnInit {\n  id: number;\n  workOrder?: WorkOrder | undefined;\n  technician?: Technician | undefined;\n\n  constructor(private router: Router, private route: ActivatedRoute, private workOrderService: WorkOrderService) {\n    this.id = Number(this.route.snapshot.paramMap.get('id'));\n    }\n\n  /**\n   * Calls the getWorkOrder function after the page loads\n   * to ensure the call doesn't return empty due the the page load order\n  */\n  ngOnInit(): void {\n    this.getWorkOrder();\n  }\n\n  /** \n   * Generates the workorder.noNum by capturing the `:id` from the URI slug\r\n   */\n  getWorkOrder(): void {\n    this.workOrderService.getWorkOrder(this.id).subscribe(workOrder => {\n      if (workOrder) {\r\n        this.workOrder = workOrder\r\n      } else {\r\n        this.error404();\n      }\r\n    });\n  }\n\n  /**\n    *This method attempts to redirect to the 404 page if the workOrder does not exist\n  */\n  error404(): void {\n    this.router.navigateByUrl('404');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}