{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet WorkOrdersComponent = class WorkOrdersComponent {\n  constructor(workOrderService) {\n    this.workOrderService = workOrderService;\n  }\n  /**\r\n   * Calls the getWorkOrders function after the page loads\r\n   * to ensure the call doesn't return empty due the the page load order\r\n  */\n  ngOnInit() {\n    this.getWorkOrders();\n  }\n  /**\r\n   * Generates a list of work orders from a table if records are available\r\n   */\n  getWorkOrders() {\n    this.workOrderService.getWorkOrders().subscribe(workOrders => {\n      if (workOrders.length > 0) {\n        this.workOrders = workOrders;\n      }\n    });\n  }\n  /**\r\n   *  This method updates the workorder table by adding a new record\r\n   */\n  addWorkOrder() {} //TODO\n  /**\r\n   * Filters the workorder query by status value\r\n   */\n  getFilteredWorkOrders() {} //TODO\n};\n\nWorkOrdersComponent = __decorate([Component({\n  selector: 'app-work-orders',\n  templateUrl: './work-orders.component.html',\n  styleUrls: ['./work-orders.component.css']\n})], WorkOrdersComponent);\nexport { WorkOrdersComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YAAoBC,gBAAkC;IAAlC,qBAAgB,GAAhBA,gBAAgB;EAAsB;EAE1D;;;;EAIAC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEA;;;EAGAA,aAAa;IACX,IAAI,CAACF,gBAAgB,CAACE,aAAa,EAAE,CAACC,SAAS,CAACC,UAAU,IAAG;MAC3D,IAAIA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACzB,IAAI,CAACD,UAAU,GAAGA,UAAU;;IAEjC,CAAC,CAAC;EACH;EAEA;;;EAGAE,YAAY,IAAW,CAAC,CAAC;EAEzB;;;EAGAC,qBAAqB,IAAK,CAAC,CAAC;CAC7B;;AAjCYT,mBAAmB,eAL/BD,SAAS,CAAC;EACTW,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWZ,mBAAmB,CAiC/B;SAjCYA,mBAAmB","names":["Component","WorkOrdersComponent","constructor","workOrderService","ngOnInit","getWorkOrders","subscribe","workOrders","length","addWorkOrder","getFilteredWorkOrders","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\bingh\\source\\repos\\WorkOrderProject\\WorkOrderProject\\ClientApp\\src\\app\\work-orders\\work-orders.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { WorkOrderService } from '../work-order.service';\nimport { WorkOrder } from '../work-order';\r\n\n@Component({\n  selector: 'app-work-orders',\n  templateUrl: './work-orders.component.html',\n  styleUrls: ['./work-orders.component.css']\n})\nexport class WorkOrdersComponent implements OnInit {\n  workOrders?: WorkOrder[];\n\n  constructor(private workOrderService: WorkOrderService) { }\n\n  /**\n   * Calls the getWorkOrders function after the page loads\n   * to ensure the call doesn't return empty due the the page load order\n  */\n  ngOnInit(): void {\n    this.getWorkOrders();\n  }\n\n  /** \n   * Generates a list of work orders from a table if records are available\r\n   */\n  getWorkOrders(): void {\n    this.workOrderService.getWorkOrders().subscribe(workOrders => {\n      if (workOrders.length > 0) {\n        this.workOrders = workOrders;\r\n      }\n   });\n  }\n\n  /**\n   *  This method updates the workorder table by adding a new record\n   */\n  addWorkOrder(): void { } //TODO\n\n  /**\n   * Filters the workorder query by status value\r\n   */\n  getFilteredWorkOrders() { } //TODO\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}