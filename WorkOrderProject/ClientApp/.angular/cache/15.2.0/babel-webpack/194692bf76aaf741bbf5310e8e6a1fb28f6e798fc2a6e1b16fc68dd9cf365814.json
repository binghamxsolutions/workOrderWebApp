{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TechnicianService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.httpOptions = {\n      header: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.base = baseUrl;\n  }\n  getTechnicians() {\n    return this.http.get(\"http://localhost:5041/Technician\").pipe(catchError(this.handleError('getTechnicians', [])));\n  }\n  getTechnician(id) {\n    const url = '${this.techniciansUrl}/${id}';\n    return this.http.get(this.base + 'gettechnician?id=$id').pipe(catchError(this.handleError('getTechnician techId = ${id}')));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      return of(result);\n    };\n  } //code sourced from: https://angular.io/tutorial/tour-of-heroes/toh-pt6#heroes-and-http\n}\nTechnicianService.ɵfac = function TechnicianService_Factory(t) {\n  return new (t || TechnicianService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nTechnicianService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TechnicianService,\n  factory: TechnicianService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAkB,gBAAgB;;;AAMrD,OAAM,MAAOC,iBAAiB;EAM5BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAJxB,gBAAW,GAAG;MACZE,MAAM,EAAE,IAAIP,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAC/D;IAE4E,IAAI,CAACQ,IAAI,GAAGF,OAAO;EAAE;EAElGG,cAAc;IACZ,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,kCAAkC,CAAC,CAACC,IAAI,CACzET,UAAU,CAAC,IAAI,CAACU,WAAW,CAAe,gBAAgB,EAAE,EAAE,CAAC,CAAC,CACjE;EACH;EAEAC,aAAa,CAACC,EAAU;IACtB,MAAMC,GAAG,GAAG,8BAA8B;IAC1C,OAAO,IAAI,CAACV,IAAI,CAACK,GAAG,CAAa,IAAI,CAACF,IAAI,GAAG,sBAAsB,CAAC,CAACG,IAAI,CACvET,UAAU,CAAC,IAAI,CAACU,WAAW,CAAa,8BAA8B,CAAC,CAAC,CACzE;EACH;EAEQA,WAAW,CAAII,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MAAG,OAAOjB,EAAE,CAACgB,MAAW,CAAC;IAAC,CAAC;EAClE,CAAC,CAAC;;AAvBSd,iBAAiB;mBAAjBA,iBAAiB,0CAMkB,UAAU;AAAA;AAN7CA,iBAAiB;SAAjBA,iBAAiB;EAAAgB,SAAjBhB,iBAAiB;EAAAiB,YAFhB;AAAM","names":["HttpHeaders","of","catchError","TechnicianService","constructor","http","baseUrl","header","base","getTechnicians","get","pipe","handleError","getTechnician","id","url","operation","result","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\bingh\\source\\repos\\WorkOrderProject\\WorkOrderProject\\ClientApp\\src\\app\\technician.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Technician } from './technician';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicianService {\n  base?: string;\n  httpOptions = {\n    header: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) { this.base = baseUrl; }\n\n  getTechnicians(): Observable<Technician[]> {\n    return this.http.get<Technician[]>(\"http://localhost:5041/Technician\").pipe(\n      catchError(this.handleError<Technician[]>('getTechnicians', []))\n    );\n  }\n\n  getTechnician(id: number): Observable<Technician> {\n    const url = '${this.techniciansUrl}/${id}';\n    return this.http.get<Technician>(this.base + 'gettechnician?id=$id').pipe(\n      catchError(this.handleError<Technician>('getTechnician techId = ${id}'))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => { return of(result as T) };\n  } //code sourced from: https://angular.io/tutorial/tour-of-heroes/toh-pt6#heroes-and-http\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}