{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkOrderService {\n  constructor(http) {\n    this.http = http;\n    this.workOrdersUrl = 'api/workOrders';\n    this.httpOptions = {\n      header: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getWorkOrders() {\n    return this.http.get(this.workOrdersUrl).pipe(catchError(this.handleError('getWorkOrders', [])));\n  }\n  getWorkOrders(id) {\n    return this.http.get(this.workOrdersUrl).pipe(catchError(this.handleError('getWorkOrders', [])));\n  }\n  getWorkOrder(id) {\n    const url = '${this.workOrdersUrl}/${id}';\n    return this.http.get(url).pipe(catchError(this.handleError('getWorkOrder woId = ${id}')));\n  }\n  handleError(operation = 'operation', result) {\n    return error => {\n      return of(result);\n    };\n  } //code sourced from: https://angular.io/tutorial/tour-of-heroes/toh-pt6#heroes-and-http\n}\nWorkOrderService.ɵfac = function WorkOrderService_Factory(t) {\n  return new (t || WorkOrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nWorkOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WorkOrderService,\n  factory: WorkOrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,UAAU,QAAkB,gBAAgB;;;AAMrD,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,kBAAa,GAAG,gBAAgB;IACxC,gBAAW,GAAG;MACZC,MAAM,EAAE,IAAIN,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAC/D;EAEuC;EAExCO,aAAa;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACC,aAAa,CAAC,CAACC,IAAI,CACxDR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAc,eAAe,EAAE,EAAE,CAAC,CAAC,CAC/D;EACH;EAEAJ,aAAa,CAACK,EAAO;IACnB,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAc,IAAI,CAACC,aAAa,CAAC,CAACC,IAAI,CACxDR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAc,eAAe,EAAE,EAAE,CAAC,CAAC,CAC/D;EACH;EAIAE,YAAY,CAACD,EAAU;IACrB,MAAME,GAAG,GAAG,6BAA6B;IACzC,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAYM,GAAG,CAAC,CAACJ,IAAI,CACvCR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAY,2BAA2B,CAAC,CAAC,CACrE;EACH;EAEQA,WAAW,CAAII,SAAS,GAAG,WAAW,EAAEC,MAAU;IACxD,OAAQC,KAAU,IAAmB;MAAG,OAAOhB,EAAE,CAACe,MAAW,CAAC;IAAC,CAAC;EAClE,CAAC,CAAC;;AA/BSb,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAe,SAAhBf,gBAAgB;EAAAgB,YAFf;AAAM","names":["HttpHeaders","of","catchError","WorkOrderService","constructor","http","header","getWorkOrders","get","workOrdersUrl","pipe","handleError","id","getWorkOrder","url","operation","result","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\bingh\\source\\repos\\WorkOrderProject\\WorkOrderProject\\ClientApp\\src\\app\\work-order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { WorkOrder } from './work-order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkOrderService {\n  private workOrdersUrl = 'api/workOrders';\n  httpOptions = {\n    header: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getWorkOrders(): Observable<WorkOrder[]> {\n    return this.http.get<WorkOrder[]>(this.workOrdersUrl).pipe(\n      catchError(this.handleError<WorkOrder[]>('getWorkOrders', []))\n    );\n  }\n\n  getWorkOrders(id: num): Observable<WorkOrder[]> {\n    return this.http.get<WorkOrder[]>(this.workOrdersUrl).pipe(\n      catchError(this.handleError<WorkOrder[]>('getWorkOrders', []))\n    );\n  }\n\n\n\n  getWorkOrder(id: number): Observable<WorkOrder> {\n    const url = '${this.workOrdersUrl}/${id}';\n    return this.http.get<WorkOrder>(url).pipe(\n      catchError(this.handleError<WorkOrder>('getWorkOrder woId = ${id}'))\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => { return of(result as T) };\n  } //code sourced from: https://angular.io/tutorial/tour-of-heroes/toh-pt6#heroes-and-http\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}